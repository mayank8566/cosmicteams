{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Mayank/Desktop/cosmicteams/src/components/HeaderWrapper.tsx"],"sourcesContent":["'use client';\r\n\r\nimport dynamic from 'next/dynamic';\r\n\r\n// Dynamically import the Header component with no SSR to avoid hydration issues\r\nconst Header = dynamic(() => import('./Header'), { ssr: false });\r\n\r\nexport default function HeaderWrapper() {\r\n  return <Header />;\r\n} "],"names":[],"mappings":";;;;AAEA;;AAFA;;;AAIA,gFAAgF;AAChF,MAAM,SAAS,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD,EAAE;;;;;;IAA4B,KAAK;;AAEzC,SAAS;IACtB,qBAAO,8OAAC;;;;;AACV","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Mayank/Desktop/cosmicteams/src/components/OptimizedImage.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport Image from 'next/image';\n\ninterface OptimizedImageProps {\n  src: string;\n  alt: string;\n  width?: number;\n  height?: number;\n  className?: string;\n  priority?: boolean;\n  loadingStrategy?: 'lazy' | 'eager';\n  objectFit?: 'cover' | 'contain' | 'fill' | 'none';\n}\n\n/**\n * OptimizedImage component for better performance across the application\n * This component handles image loading optimization with blur placeholder,\n * priority loading for above-the-fold images, and proper error handling\n */\nconst OptimizedImage: React.FC<OptimizedImageProps> = ({\n  src,\n  alt,\n  width = 100,\n  height = 100,\n  className = '',\n  priority = false,\n  loadingStrategy = 'lazy',\n  objectFit = 'cover',\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  // Handle errors and loading state\n  const handleLoad = () => {\n    setIsLoading(false);\n  };\n\n  const handleError = () => {\n    setIsLoading(false);\n    setError(true);\n  };\n\n  // Generate placeholder shimmer effect\n  const shimmer = `\n    <svg width=\"${width}\" height=\"${height}\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n      <rect width=\"${width}\" height=\"${height}\" fill=\"#1e293b\" />\n      <rect id=\"r\" width=\"${width}\" height=\"${height}\" fill=\"url(#g)\" />\n      <defs>\n        <linearGradient id=\"g\">\n          <stop stop-color=\"#1e293b\" offset=\"0%\" />\n          <stop stop-color=\"#334155\" offset=\"50%\" />\n          <stop stop-color=\"#1e293b\" offset=\"100%\" />\n        </linearGradient>\n      </defs>\n    </svg>`;\n\n  const toBase64 = (str: string) =>\n    typeof window === 'undefined'\n      ? Buffer.from(str).toString('base64')\n      : window.btoa(str);\n\n  // Create blur data URL\n  const blurDataURL = `data:image/svg+xml;base64,${toBase64(shimmer)}`;\n\n  return (\n    <div className={`relative overflow-hidden ${className}`} style={{ width, height }}>\n      {isLoading && (\n        <div className=\"absolute inset-0 bg-slate-800 animate-pulse\" />\n      )}\n      \n      {!error ? (\n        <Image\n          src={src}\n          alt={alt}\n          width={width}\n          height={height}\n          onLoad={handleLoad}\n          onError={handleError}\n          priority={priority}\n          loading={loadingStrategy}\n          placeholder=\"blur\"\n          blurDataURL={blurDataURL}\n          style={{\n            objectFit,\n            opacity: isLoading ? 0 : 1,\n            transition: 'opacity 0.2s ease-in-out',\n          }}\n          className=\"w-full h-full\"\n        />\n      ) : (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-slate-800 text-slate-300 text-sm\">\n          <span>Failed to load image</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OptimizedImage;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAgBA;;;;CAIC,GACD,MAAM,iBAAgD,CAAC,EACrD,GAAG,EACH,GAAG,EACH,QAAQ,GAAG,EACX,SAAS,GAAG,EACZ,YAAY,EAAE,EACd,WAAW,KAAK,EAChB,kBAAkB,MAAM,EACxB,YAAY,OAAO,EACpB;IACC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,kCAAkC;IAClC,MAAM,aAAa;QACjB,aAAa;IACf;IAEA,MAAM,cAAc;QAClB,aAAa;QACb,SAAS;IACX;IAEA,sCAAsC;IACtC,MAAM,UAAU,CAAC;gBACH,EAAE,MAAM,UAAU,EAAE,OAAO;mBACxB,EAAE,MAAM,UAAU,EAAE,OAAO;0BACpB,EAAE,MAAM,UAAU,EAAE,OAAO;;;;;;;;UAQ3C,CAAC;IAET,MAAM,WAAW,CAAC,MAChB,uCACI,OAAO,IAAI,CAAC,KAAK,QAAQ,CAAC;IAGhC,uBAAuB;IACvB,MAAM,cAAc,CAAC,0BAA0B,EAAE,SAAS,UAAU;IAEpE,qBACE,8OAAC;QAAI,WAAW,CAAC,yBAAyB,EAAE,WAAW;QAAE,OAAO;YAAE;YAAO;QAAO;;YAC7E,2BACC,8OAAC;gBAAI,WAAU;;;;;;YAGhB,CAAC,sBACA,8OAAC,6HAAA,CAAA,UAAK;gBACJ,KAAK;gBACL,KAAK;gBACL,OAAO;gBACP,QAAQ;gBACR,QAAQ;gBACR,SAAS;gBACT,UAAU;gBACV,SAAS;gBACT,aAAY;gBACZ,aAAa;gBACb,OAAO;oBACL;oBACA,SAAS,YAAY,IAAI;oBACzB,YAAY;gBACd;gBACA,WAAU;;;;;qCAGZ,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;8BAAK;;;;;;;;;;;;;;;;;AAKhB;uCAEe","debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Mayank/Desktop/cosmicteams/src/app/admin/token-management/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { collection, query, where, getDocs, doc, getDoc, updateDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport { useAuth } from '@/lib/AuthContext';\nimport HeaderWrapper from '@/components/HeaderWrapper';\nimport OptimizedImage from '@/components/OptimizedImage';\n\ninterface UserData {\n  uid: string;\n  email: string;\n  displayName: string;\n  username?: string;\n  photoURL?: string;\n  cosmicTokens: number;\n}\n\nexport default function TokenManagementPage() {\n  const router = useRouter();\n  const { user } = useAuth();\n  \n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<UserData[]>([]);\n  const [selectedUser, setSelectedUser] = useState<UserData | null>(null);\n  const [tokenAmount, setTokenAmount] = useState('');\n  const [transactionType, setTransactionType] = useState<'add' | 'remove'>('add');\n  const [message, setMessage] = useState<{ text: string; type: 'success' | 'error' } | null>(null);\n  const [recentTransactions, setRecentTransactions] = useState<Array<{\n    userId: string;\n    username: string;\n    amount: number;\n    type: 'add' | 'remove';\n    timestamp: number;\n  }>>([]);\n\n  // Check if current user is an admin\n  useEffect(() => {\n    const checkAdminStatus = async () => {\n      if (!user) {\n        router.push('/login');\n        return;\n      }\n\n      try {\n        const userDoc = await getDoc(doc(db, 'users', user.email as string));\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          if (userData.role === 'admin') {\n            setIsAdmin(true);\n            // Load recent transactions if any\n            const transactionsRef = collection(db, 'tokenTransactions');\n            const q = query(transactionsRef, where('adminId', '==', user.email));\n            const transactionsSnapshot = await getDocs(q);\n            \n            const transactions: any[] = [];\n            transactionsSnapshot.forEach(doc => {\n              transactions.push(doc.data());\n            });\n            \n            // Sort by timestamp, most recent first\n            transactions.sort((a, b) => b.timestamp - a.timestamp);\n            setRecentTransactions(transactions.slice(0, 10)); // Keep only last 10\n          } else {\n            router.push('/dashboard');\n          }\n        }\n      } catch (error) {\n        console.error('Error checking admin status:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkAdminStatus();\n  }, [user, router]);\n\n  // Handle user search\n  const handleSearch = async () => {\n    if (!searchTerm.trim()) return;\n    \n    setIsLoading(true);\n    setSearchResults([]);\n    setSelectedUser(null);\n    try {\n      const usersRef = collection(db, 'users');\n      let foundUsers: UserData[] = [];\n      \n      // If search term contains @ symbol, search by email\n      if (searchTerm.includes('@')) {\n        const userDoc = await getDoc(doc(db, 'users', searchTerm));\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          foundUsers.push({\n            uid: userDoc.id,\n            email: userDoc.id,\n            displayName: userData.displayName || 'Unknown',\n            username: userData.username,\n            photoURL: userData.photoURL,\n            cosmicTokens: userData.cosmicTokens || 0\n          });\n        }\n      } else {\n        // Search by username (case-insensitive)\n        const snapshot = await getDocs(usersRef);\n        snapshot.forEach(doc => {\n          const userData = doc.data();\n          if (\n            userData.username && \n            userData.username.toLowerCase().includes(searchTerm.toLowerCase())\n          ) {\n            foundUsers.push({\n              uid: doc.id,\n              email: doc.id,\n              displayName: userData.displayName || 'Unknown',\n              username: userData.username,\n              photoURL: userData.photoURL,\n              cosmicTokens: userData.cosmicTokens || 0\n            });\n          }\n        });\n      }\n      \n      setSearchResults(foundUsers);\n    } catch (error) {\n      console.error('Error searching users:', error);\n      setMessage({\n        text: 'Error searching for users. Please try again.',\n        type: 'error'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle user selection\n  const selectUser = (user: UserData) => {\n    setSelectedUser(user);\n    setTokenAmount('');\n    setMessage(null);\n  };\n\n  // Handle token transaction\n  const handleTokenTransaction = async () => {\n    if (!selectedUser || !tokenAmount || isNaN(Number(tokenAmount))) {\n      setMessage({\n        text: 'Please enter a valid token amount',\n        type: 'error'\n      });\n      return;\n    }\n\n    const amount = Number(tokenAmount);\n    if (amount <= 0) {\n      setMessage({\n        text: 'Token amount must be greater than 0',\n        type: 'error'\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const userRef = doc(db, 'users', selectedUser.email);\n      const userDoc = await getDoc(userRef);\n      \n      if (!userDoc.exists()) {\n        throw new Error('User not found');\n      }\n      \n      const userData = userDoc.data();\n      const currentTokens = userData.cosmicTokens || 0;\n      let newTokens: number;\n      \n      if (transactionType === 'add') {\n        newTokens = currentTokens + amount;\n      } else {\n        // Remove tokens\n        if (currentTokens < amount) {\n          setMessage({\n            text: `User only has ${currentTokens} tokens. Cannot remove ${amount} tokens.`,\n            type: 'error'\n          });\n          setIsLoading(false);\n          return;\n        }\n        newTokens = currentTokens - amount;\n      }\n      \n      // Update user document\n      await updateDoc(userRef, {\n        cosmicTokens: newTokens,\n        lastUpdated: Date.now()\n      });\n      \n      // Record the transaction\n      const transactionRef = collection(db, 'tokenTransactions');\n      const transactionData = {\n        userId: selectedUser.email,\n        username: selectedUser.username || selectedUser.displayName,\n        adminId: user?.email,\n        amount: amount,\n        type: transactionType,\n        timestamp: Date.now(),\n        previousBalance: currentTokens,\n        newBalance: newTokens\n      };\n      \n      await updateDoc(doc(transactionRef), transactionData);\n      \n      // Update local state\n      setSelectedUser({\n        ...selectedUser,\n        cosmicTokens: newTokens\n      });\n      \n      // Add to recent transactions\n      const newTransaction = {\n        userId: selectedUser.email,\n        username: selectedUser.username || selectedUser.displayName,\n        amount: amount,\n        type: transactionType,\n        timestamp: Date.now()\n      };\n      \n      setRecentTransactions([newTransaction, ...recentTransactions.slice(0, 9)]);\n      \n      setMessage({\n        text: `Successfully ${transactionType === 'add' ? 'added' : 'removed'} ${amount} tokens ${transactionType === 'add' ? 'to' : 'from'} ${selectedUser.username || selectedUser.email}`,\n        type: 'success'\n      });\n      \n      // Reset form\n      setTokenAmount('');\n    } catch (error) {\n      console.error('Error processing token transaction:', error);\n      setMessage({\n        text: 'Error processing token transaction. Please try again.',\n        type: 'error'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isLoading && !isAdmin) {\n    return (\n      <main className=\"min-h-screen flex flex-col\">\n        <HeaderWrapper />\n        <div className=\"flex-1 py-16 px-6 flex items-center justify-center\">\n          <div className=\"cosmic-card p-8\">\n            <div className=\"animate-spin w-12 h-12 border-4 border-space-cyan border-t-transparent rounded-full mx-auto\"></div>\n            <p className=\"text-center mt-4\">Loading...</p>\n          </div>\n        </div>\n      </main>\n    );\n  }\n\n  return (\n    <main className=\"min-h-screen flex flex-col\">\n      <HeaderWrapper />\n      \n      <div className=\"flex-1 py-8 px-6 max-w-6xl mx-auto w-full\">\n        <div className=\"cosmic-card p-6 mb-8\">\n          <h1 className=\"text-2xl font-bold mb-4\">Admin Token Management</h1>\n          <p className=\"mb-6 text-gray-300\">Grant or remove Cosmic Tokens from users by email or username</p>\n          \n          {/* Search form */}\n          <div className=\"flex flex-col sm:flex-row gap-4 mb-8\">\n            <input \n              type=\"text\" \n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              onKeyDown={(e) => e.key === 'Enter' && handleSearch()}\n              placeholder=\"Search by email or username\" \n              className=\"flex-1 bg-space-darker border border-space-indigo rounded-md px-4 py-2 text-white\"\n            />\n            <button \n              onClick={handleSearch}\n              disabled={isLoading || !searchTerm.trim()}\n              className=\"btn-primary\"\n            >\n              {isLoading ? 'Searching...' : 'Search'}\n            </button>\n          </div>\n          \n          {/* Search results */}\n          {searchResults.length > 0 && (\n            <div className=\"mb-8\">\n              <h2 className=\"text-xl font-semibold mb-4\">Search Results</h2>\n              <div className=\"space-y-4\">\n                {searchResults.map(user => (\n                  <div \n                    key={user.email} \n                    className={`border p-4 rounded-md cursor-pointer transition-colors ${selectedUser?.email === user.email ? 'border-space-gold bg-space-gold/10' : 'border-space-indigo hover:border-space-cyan'}`}\n                    onClick={() => selectUser(user)}\n                  >\n                    <div className=\"flex items-center gap-4\">\n                      {user.photoURL ? (\n                        <div className=\"w-12 h-12 rounded-full overflow-hidden\">\n                          <OptimizedImage \n                            src={user.photoURL} \n                            alt={user.displayName}\n                            width={48}\n                            height={48}\n                            className=\"w-full h-full object-cover\" \n                          />\n                        </div>\n                      ) : (\n                        <div className=\"w-12 h-12 rounded-full bg-space-indigo flex items-center justify-center\">\n                          <span className=\"text-xl font-bold text-white\">{(user.displayName?.[0] || user.email[0]).toUpperCase()}</span>\n                        </div>\n                      )}\n                      <div className=\"flex-1\">\n                        <h3 className=\"font-semibold\">{user.displayName}</h3>\n                        <p className=\"text-sm text-gray-300\">{user.username ? `@${user.username}` : ''}</p>\n                        <p className=\"text-sm text-gray-300\">{user.email}</p>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"font-semibold\">{user.cosmicTokens} Tokens</div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {/* Selected user form */}\n          {selectedUser && (\n            <div className=\"cosmic-card bg-space-darker p-6 mb-8\">\n              <h2 className=\"text-xl font-semibold mb-4\">Modify Tokens for {selectedUser.username || selectedUser.email}</h2>\n              <p className=\"mb-4\">Current balance: <span className=\"font-semibold\">{selectedUser.cosmicTokens} Tokens</span></p>\n              \n              {message && (\n                <div className={`mb-4 p-3 rounded-md ${message.type === 'success' ? 'bg-green-900/50 text-green-300' : 'bg-red-900/50 text-red-300'}`}>\n                  {message.text}\n                </div>\n              )}\n              \n              <div className=\"flex flex-col sm:flex-row gap-4 mb-4\">\n                <div className=\"flex-1\">\n                  <label className=\"block text-sm font-medium mb-2\" htmlFor=\"token-amount\">Token Amount</label>\n                  <input \n                    id=\"token-amount\"\n                    type=\"number\" \n                    min=\"1\"\n                    value={tokenAmount}\n                    onChange={(e) => setTokenAmount(e.target.value)}\n                    placeholder=\"Enter amount\" \n                    className=\"w-full bg-space-dark border border-space-indigo rounded-md px-4 py-2 text-white\"\n                  />\n                </div>\n                <div className=\"flex-1\">\n                  <label className=\"block text-sm font-medium mb-2\">Transaction Type</label>\n                  <div className=\"flex space-x-4\">\n                    <label className=\"flex items-center space-x-2 cursor-pointer\">\n                      <input \n                        type=\"radio\" \n                        value=\"add\"\n                        checked={transactionType === 'add'}\n                        onChange={() => setTransactionType('add')}\n                        className=\"form-radio text-space-gold focus:ring-space-gold h-5 w-5\"\n                      />\n                      <span>Add Tokens</span>\n                    </label>\n                    <label className=\"flex items-center space-x-2 cursor-pointer\">\n                      <input \n                        type=\"radio\" \n                        value=\"remove\"\n                        checked={transactionType === 'remove'}\n                        onChange={() => setTransactionType('remove')}\n                        className=\"form-radio text-red-500 focus:ring-red-500 h-5 w-5\"\n                      />\n                      <span>Remove Tokens</span>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              \n              <button \n                onClick={handleTokenTransaction}\n                disabled={isLoading || !tokenAmount || isNaN(Number(tokenAmount)) || Number(tokenAmount) <= 0}\n                className={`px-6 py-2 rounded-md font-medium ${transactionType === 'add' ? 'bg-space-gold text-black hover:bg-space-gold/90' : 'bg-red-600 text-white hover:bg-red-700'}`}\n              >\n                {isLoading ? 'Processing...' : transactionType === 'add' ? 'Add Tokens' : 'Remove Tokens'}\n              </button>\n            </div>\n          )}\n          \n          {/* Recent transactions */}\n          {recentTransactions.length > 0 && (\n            <div className=\"mt-8\">\n              <h2 className=\"text-xl font-semibold mb-4\">Recent Transactions</h2>\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead>\n                    <tr className=\"border-b border-space-indigo\">\n                      <th className=\"px-4 py-2 text-left\">User</th>\n                      <th className=\"px-4 py-2 text-left\">Action</th>\n                      <th className=\"px-4 py-2 text-right\">Amount</th>\n                      <th className=\"px-4 py-2 text-right\">Date</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {recentTransactions.map((transaction, index) => (\n                      <tr key={index} className=\"border-b border-space-indigo/30\">\n                        <td className=\"px-4 py-3\">{transaction.username}</td>\n                        <td className=\"px-4 py-3\">\n                          <span className={`px-2 py-1 rounded-full text-xs ${transaction.type === 'add' ? 'bg-green-900/50 text-green-300' : 'bg-red-900/50 text-red-300'}`}>\n                            {transaction.type === 'add' ? 'Added' : 'Removed'}\n                          </span>\n                        </td>\n                        <td className=\"px-4 py-3 text-right\">{transaction.amount} Tokens</td>\n                        <td className=\"px-4 py-3 text-right\">{new Date(transaction.timestamp).toLocaleString()}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}