{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Mayank/Desktop/cosmicteams/src/components/AdminGuard.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, ReactNode } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { doc, getDoc } from '@firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport { useAuth } from '@/lib/AuthContext';\n\ninterface AdminGuardProps {\n  children: ReactNode;\n  fallbackUrl?: string;\n}\n\nexport default function AdminGuard({ children, fallbackUrl = '/dashboard' }: AdminGuardProps) {\n  const router = useRouter();\n  const { user, loading: authLoading } = useAuth();\n  const [isAdmin, setIsAdmin] = useState<boolean | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (authLoading) return;\n\n    if (!user) {\n      router.push('/login');\n      return;\n    }\n\n    const checkAdminStatus = async () => {\n      try {\n        // Allow direct access for alok905621@gmail.com\n        if (user.email === 'alok905621@gmail.com') {\n          setIsAdmin(true);\n          setIsLoading(false);\n          return;\n        }\n\n        // Check if there's an admin session stored\n        const adminAuth = sessionStorage.getItem('adminAuth');\n        if (adminAuth === 'true') {\n          setIsAdmin(true);\n          setIsLoading(false);\n          return;\n        }\n\n        const userDoc = await getDoc(doc(db, 'userProfiles', user.email || ''));\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          if (userData.role === 'admin') {\n            setIsAdmin(true);\n          } else {\n            setIsAdmin(false);\n            router.push(fallbackUrl);\n          }\n        } else {\n          setIsAdmin(false);\n          router.push(fallbackUrl);\n        }\n      } catch (error) {\n        console.error('Error checking admin status:', error);\n        setIsAdmin(false);\n        router.push(fallbackUrl);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkAdminStatus();\n  }, [user, authLoading, router, fallbackUrl]);\n\n  if (authLoading || isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-space-dark\">\n        <div className=\"cosmic-card p-8\">\n          <div className=\"animate-spin w-12 h-12 border-4 border-space-cyan border-t-transparent rounded-full mx-auto\"></div>\n          <p className=\"text-center mt-4\">Verifying admin access...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (isAdmin) {\n    return <>{children}</>;\n  }\n\n  // This should not render as router.push should redirect, but for safety\n  return null;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAae,SAAS,WAAW,EAAE,QAAQ,EAAE,cAAc,YAAY,EAAmB;;IAC1F,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,IAAI,EAAE,SAAS,WAAW,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,UAAO,AAAD;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,IAAI,aAAa;YAEjB,IAAI,CAAC,MAAM;gBACT,OAAO,IAAI,CAAC;gBACZ;YACF;YAEA,MAAM;yDAAmB;oBACvB,IAAI;wBACF,+CAA+C;wBAC/C,IAAI,KAAK,KAAK,KAAK,wBAAwB;4BACzC,WAAW;4BACX,aAAa;4BACb;wBACF;wBAEA,2CAA2C;wBAC3C,MAAM,YAAY,eAAe,OAAO,CAAC;wBACzC,IAAI,cAAc,QAAQ;4BACxB,WAAW;4BACX,aAAa;4BACb;wBACF;wBAEA,MAAM,UAAU,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE,gBAAgB,KAAK,KAAK,IAAI;wBACnE,IAAI,QAAQ,MAAM,IAAI;4BACpB,MAAM,WAAW,QAAQ,IAAI;4BAC7B,IAAI,SAAS,IAAI,KAAK,SAAS;gCAC7B,WAAW;4BACb,OAAO;gCACL,WAAW;gCACX,OAAO,IAAI,CAAC;4BACd;wBACF,OAAO;4BACL,WAAW;4BACX,OAAO,IAAI,CAAC;wBACd;oBACF,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,gCAAgC;wBAC9C,WAAW;wBACX,OAAO,IAAI,CAAC;oBACd,SAAU;wBACR,aAAa;oBACf;gBACF;;YAEA;QACF;+BAAG;QAAC;QAAM;QAAa;QAAQ;KAAY;IAE3C,IAAI,eAAe,WAAW;QAC5B,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;;;;;kCACf,6LAAC;wBAAE,WAAU;kCAAmB;;;;;;;;;;;;;;;;;IAIxC;IAEA,IAAI,SAAS;QACX,qBAAO;sBAAG;;IACZ;IAEA,wEAAwE;IACxE,OAAO;AACT;GAzEwB;;QACP,qIAAA,CAAA,YAAS;QACe,6HAAA,CAAA,UAAO;;;KAFxB","debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Mayank/Desktop/cosmicteams/src/app/admin/layout.tsx"],"sourcesContent":["'use client';\n\nimport AdminGuard from '@/components/AdminGuard';\n\nexport default function AdminLayout({ children }: { children: React.ReactNode }) {\n  return <AdminGuard>{children}</AdminGuard>;\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS,YAAY,EAAE,QAAQ,EAAiC;IAC7E,qBAAO,6LAAC,mIAAA,CAAA,UAAU;kBAAE;;;;;;AACtB;KAFwB","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Mayank/Desktop/cosmicteams/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}